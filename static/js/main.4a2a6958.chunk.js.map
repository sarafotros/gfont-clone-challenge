{"version":3,"sources":["assets/plus.svg","components/CssInfo.js","components/Card.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","className","fill","_ref","svgRef","title","props","height","viewBox","width","ref","ForwardRef","forwardRef","CssInfo","link","fontFam","Card","classes","fontInfo","fontClass","addBtn","handleClickApply","handleClickReset","plusClicked","cssInfo","minusClicked","fontName","fontAuthor","onClick","fontLink","type","onChange","textChangeHandlers","value","undefined","text","style","btnStyle","marginTop","border","background","outline","color","fontSize","fontFamily","fontWeight","textShadow","cursor","NavBar","valueProp","handleSearch","marginRight","placeholder","App","state","id","cardId","searchTerm","filteredFontInfo","componentDidMount","setState","e","allFontsArr","filtered","filter","font","toLocaleLowerCase","includes","handleTextChange","index","fontInfoCopy","map","textAreaInput","clickHandlerBtn","inp","clickResetHandler","handleCssDisplay","handleResetCssInfo","cssCard","toggleHandler","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4a2a6958.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"m256 0c-141.164062 0-256 114.835938-256 256s114.835938 256 256 256 256-114.835938 256-256-114.835938-256-256-256zm112 277.332031h-90.667969v90.667969c0 11.777344-9.554687 21.332031-21.332031 21.332031s-21.332031-9.554687-21.332031-21.332031v-90.667969h-90.667969c-11.777344 0-21.332031-9.554687-21.332031-21.332031s9.554687-21.332031 21.332031-21.332031h90.667969v-90.667969c0-11.777344 9.554687-21.332031 21.332031-21.332031s21.332031 9.554687 21.332031 21.332031v90.667969h90.667969c11.777344 0 21.332031 9.554687 21.332031 21.332031s-9.554687 21.332031-21.332031 21.332031zm0 0\",\n  \"data-original\": \"#000000\",\n  className: \"active-path\",\n  \"data-old_color\": \"#000000\",\n  fill: \"#F75759\"\n}));\n\nvar SvgPlus = function SvgPlus(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    height: \"512px\",\n    viewBox: \"0 0 512 512\",\n    width: \"512px\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgPlus, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/plus.ace77d1b.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport '../styles/CssInfo.css';\n\nconst CssInfo = (props) => {\n  return (\n    <div className='css-container'>\n      <section className='info'>\n        <label className='font-family'>\n          {' '}\n          To embed a font, copy the code into the &lt;head&gt; of your html{' '}\n        </label>\n        <form>\n          &lt;style&gt;\n          <br />\n          @import url(&quot;https://fonts.googleapis.com/css2?family=\n          {props.link}&amp;display=swap&quot;);\n          <br />\n          &lt;style&gt;\n        </form>{' '}\n      </section>\n\n      <section className='info'>\n        <label className='font-link'> CSS rules to specify families</label>\n        <form>font-family: '{props.fontFam}'</form>\n      </section>\n    </div>\n  );\n};\n\nexport default CssInfo;\n","import React from 'react';\nimport '../styles/Card.css';\nimport { ReactComponent as Plus } from '../assets/plus.svg';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport CssInfo from './CssInfo';\n\nconst Card = (props) => {\n  let classes = `show-text ${props.fontInfo.fontClass}`;\n  const {\n    addBtn,\n    handleClickApply,\n    handleClickReset,\n    plusClicked,\n    cssInfo,\n    minusClicked,\n  } = props;\n\n  return (\n    <div className='card-container'>\n      <div className='wrapper'>\n        <div className='info-container'>\n          <p className='font-name'>{props.fontInfo.fontName}</p>\n          <p className='font-author'>{props.fontInfo.fontAuthor}</p>\n        </div>\n        {cssInfo ? (\n          <IndeterminateCheckBoxIcon onClick={minusClicked} />\n        ) : (\n          <Plus className='plus' onClick={plusClicked} />\n        )}\n      </div>\n      {cssInfo ? (\n        <CssInfo\n          link={props.fontInfo.fontLink}\n          fontFam={props.fontInfo.fontName}\n        />\n      ) : (\n        <>\n          <textarea\n            className={classes}\n            type='text'\n            onChange={props.textChangeHandlers}\n            value={addBtn ? undefined : props.text}\n          ></textarea>\n          {addBtn && (\n            <div className='btn-style'>\n              <button onClick={handleClickApply} style={btnStyle}>\n                Apply to all\n              </button>\n              <button onClick={handleClickReset} style={btnStyle}>\n                Reset\n              </button>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Card;\nconst btnStyle = {\n  marginTop: 2,\n  border: 'none',\n  background: 'none',\n  outline: 'none',\n  color: 'tomato',\n  fontSize: 20,\n  fontFamily: 'Open sans',\n  fontWeight: 'bolder',\n  textShadow: '2px 2px 1px #e1e1e1',\n  cursor: 'pointer',\n};\n","import React from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport '../styles/NavBar.css';\n\nexport default function NavBar({ valueProp, handleSearch }) {\n  return (\n    <div className='nav-bar'>\n      <SearchIcon style={{ color: 'grey', marginRight: 10 }} />\n      <input\n        className='input'\n        placeholder='Search Fonts'\n        type='text'\n        value={valueProp}\n        onChange={handleSearch}\n      />\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Card from './components/Card';\nimport NavBar from './components/NavBar';\n\nclass App extends Component {\n  state = {\n    fontInfo: [\n      {\n        id: 1,\n        fontName: 'Roboto',\n        fontAuthor: 'Christian Robertson',\n        fontClass: 'roboto',\n        fontLink: 'Roboto',\n        addBtn: false,\n        cssInfo: false,\n      },\n      {\n        id: 2,\n        fontName: 'Odibee Sans',\n        fontAuthor: 'James Barnard',\n        fontClass: 'odibeeSans',\n        fontLink: 'Odibe+Sans',\n        addBtn: false,\n        cssInfo: false,\n      },\n      {\n        id: 3,\n        fontName: 'Open Sans',\n        fontAuthor: 'Steve Matteson',\n        fontClass: 'openSans',\n        fontLink: 'Open+Sans',\n        addBtn: false,\n        cssInfo: false,\n      },\n      {\n        id: 4,\n        fontName: 'Sriracha',\n        fontAuthor: 'Cadson Demak',\n        fontClass: 'sriracha',\n        fontLink: 'Sriracha',\n        addBtn: false,\n        cssInfo: false,\n      },\n      {\n        id: 5,\n        fontName: 'Recursive',\n        fontAuthor: 'Stephen Nixon',\n        fontClass: 'recursive',\n        fontLink: 'Recursive',\n        addBtn: false,\n        cssInfo: false,\n      },\n      {\n        id: 6,\n        fontName: 'Mulish',\n        fontAuthor: 'Vernon Adams, Cyreal, Jacques Le Bailly',\n        fontClass: 'mulish',\n        fontLink: 'Mulish',\n        addBtn: false,\n        cssInfo: false,\n      },\n      {\n        id: 7,\n        fontName: 'Montserrat',\n        fontAuthor: 'Julieta Ulanovsky, Sol Matas, Juan Pablo del Peral',\n        fontClass: 'montserrat',\n        fontLink: 'Montserrat',\n        addBtn: false,\n        cssInfo: false,\n      },\n      {\n        id: 8,\n        fontName: 'Lato',\n        fontAuthor: 'Łukasz Dziedzic',\n        fontClass: 'lato',\n        fontLink: 'Lato',\n        addBtn: false,\n        cssInfo: false,\n      },\n      {\n        id: 9,\n        fontName: 'Oswald',\n        fontAuthor: 'Vernon Adams, Kalapi Gajjar, Cyreal',\n        fontClass: 'oswald',\n        fontLink: 'Oswald',\n        addBtn: false,\n        cssInfo: false,\n      },\n      {\n        id: 10,\n        fontName: 'Red Rose',\n        fontAuthor: 'Jaikishan Patel',\n        fontClass: 'redRose',\n        fontLink: 'Red+Rose',\n        addBtn: false,\n        cssInfo: false,\n      },\n    ],\n    text: 'Almost before we knew it, we had left the ground.',\n    cardId: '',\n    searchTerm: '',\n    filteredFontInfo: [],\n  };\n\n  componentDidMount = () => {\n    this.setState({\n      filteredFontInfo: [...this.state.fontInfo],\n    });\n  };\n\n  handleSearch = (e) => {\n    let allFontsArr = [...this.state.fontInfo];\n    let filtered = allFontsArr.filter((font) => {\n      return font.fontName\n        .toLocaleLowerCase()\n        .includes(this.state.searchTerm.toLocaleLowerCase());\n    });\n    if (e.target.value !== '') {\n      this.setState({\n        searchTerm: e.target.value,\n        filteredFontInfo: filtered,\n      });\n    } else {\n      this.setState({\n        filteredFontInfo: allFontsArr,\n        searchTerm: '',\n      });\n    }\n  };\n\n  handleTextChange = (e, index) => {\n    let fontInfoCopy = [...this.state.fontInfo];\n    fontInfoCopy.map((font) => (font.addBtn = false));\n    fontInfoCopy[index].addBtn = true;\n    this.setState({\n      textAreaInput: e.target.value,\n      fontInfo: fontInfoCopy,\n    });\n  };\n\n  clickHandlerBtn = () => {\n    let inp = this.state.textAreaInput;\n    this.setState({\n      text: inp,\n    });\n  };\n\n  clickResetHandler = () => {\n    let fontInfoCopy = [...this.state.fontInfo];\n    fontInfoCopy.map((font) => (font.addBtn = false));\n    this.setState({\n      text: 'Almost before we knew it, we had left the ground.',\n      textAreaInput: '',\n    });\n  };\n\n  handleCssDisplay = (e, index) => {\n    let fontInfoCopy = [...this.state.fontInfo];\n    fontInfoCopy.map((font) => (font.cssInfo = false));\n    fontInfoCopy[index].cssInfo = true;\n    this.setState({\n      fontInfo: fontInfoCopy,\n    });\n  };\n\n  handleResetCssInfo = (e, index) => {\n    let fontInfoCopy = [...this.state.fontInfo];\n    fontInfoCopy[index].cssInfo = false;\n    this.setState({\n      fontInfo: fontInfoCopy,\n    });\n  };\n\n  render() {\n    return (\n      <div className='container'>\n        <NavBar\n          valueProp={this.state.searchTerm}\n          handleSearch={(e) => this.handleSearch(e)}\n        />\n        {this.state.filteredFontInfo.map((font, index) => {\n          return (\n            <Card\n              key={index}\n              fontInfo={font}\n              id={font.id}\n              text={this.state.text}\n              cssCard={this.toggleHandler}\n              textChangeHandlers={(e) => this.handleTextChange(e, index)}\n              handleClickApply={() => this.clickHandlerBtn()}\n              handleClickReset={this.clickResetHandler}\n              addBtn={font.addBtn}\n              plusClicked={(e) => {\n                this.handleCssDisplay(e, index);\n              }}\n              minusClicked={(e) => this.handleResetCssInfo(e, index)}\n              cssInfo={font.cssInfo}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}